plot(x, keskarvo, type="o", col="blue", ann=F, axes=FALSE)
axis(2, at=1:2, lab=c("hyväksytty", "hylätty"))
mtext("Hyväksytty", Side=4, Line=2)
mtext("Hyväksytty", Side=3, Line=2)
mtext("Hyväksytty", Side=1, Line=2)
plot(x, keskarvo, type="o", col="blue", ann=F, axes=FALSE)
axis(2, at=1:2, lab=c("hyväksytty", "hylätty"))
mtext("Hyväksytty", Side=1, Line=2)
scale_size_area()
plot(x, keskarvo, type="o", col="blue", ann=F, axes=FALSE)
axis(2, at=1:2, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
scale_size_area()
scale_size_area(0.5)
scale_size_area(1)
title(xlab="Hakemuksen kohteena ollut ratkaisu", col.lab=rgb(0,0.5,0))
title(ylab="Lopputulos", col.lab=rgb(0,0.5,0))
box()
plot(x, keskarvo, type="o", col="blue", ann=F, axes=T)
axis(2, at=1:2, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
title(xlab="Hakemuksen kohteena ollut ratkaisu", col.lab=rgb(0,0.5,0))
title(ylab="Lopputulos", col.lab=rgb(0,0.5,0))
plot(x, keskarvo, type="o", col="blue", ann=F, axes=F)
axis(2, at=1:2, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
axis(2, at=0:1, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
title(xlab="Hakemuksen kohteena ollut ratkaisu", col.lab=rgb(0,0.5,0))
title(ylab="Lopputulos", col.lab=rgb(0,0.5,0))
p + scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
default plot
scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
+ scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
title(ylab="Lopputulos", limits=c("Hyväksytty","Hylätty") col.lab=rgb(0,0.5,0))
box()
title(ylab="Lopputulos", limits=c("Hyväksytty","Hylätty") col.lab=rgb(0,0.5,0))
title(ylab="Lopputulos", limits=c("Hyväksytty","Hylätty"), col.lab=rgb(0,0.5,0))
title(ylab="Lopputulos", col.lab=rgb(0,0.5,0))
plot(x, keskarvo, type="o", col="blue", ann=F, axes=F)
+ scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
axis(2, at=0:1, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
plot(x, keskarvo, type="o", col="blue", ann=F, axes=F)
p + scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
plot + scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
p + scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
SoilSciGuyLabs <- c("Hyväksytty", "Hylätty")
+ scale_y_discrete(labels = SoilSciGuyLabs)
+ scale_x_discrete(labels = SoilSciGuyLabs)
+ scale_x_discrete(labels= SoilSciGuyLabs)
axis(2, at=0:1, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
axis(2, at=0:1, lab=c("hyväksytty", "hylätty"))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
scale_y_discrete(name= "Lopputulos", limits=c("Hyväksytty","Hylätty"))
limits("HYäksytty")
labels?
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
model <- glm (Recommended ~ .-ID, data = Muuthaku, family = binomial)
summary(model)
install.packages('caTools')
library(caTools)
install.packages(caTools)
install.packages('caTools')
install.packages("caTools")
library(caTools)
model <- glm (Recommended ~ .-ID, data = Muuthaku, family = binomial)
View(Muuthaku)
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
library(foreign)
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
View(Muuthaku)
library(caTools)
str(bv9)
str(Muuthaku$bv9)
summary(Muuthaku$bv9)
+ family = binomial())
+ family = binomial() )
family = binomial() )
family = binomial()
malliglm <- glm(v7 ~ bv9, data = Muuthaku, family = binomial())
summary(malliglm)
plot(malliglm)
return
return
plot(bv9,v7)
plot(bv9,v7, data=Muuthaku)
plot(data=Muuthaku, bv9,v7)
plot(, Muuthaku$bv9,Muuthaku$v7)
plot(Muuthaku$bv9,Muuthaku$v7)
summary(v7)
summary(Muuthaku$v7)
summary(Muuthaku$v7_u)
qplot(Muuthaku$bv9,Muuthaku$v7)
library(ggplot2)
qplot(Muuthaku$bv9,Muuthaku$v7)
qplot(malliglm)
malliglm2 <- glm(bv9 ~ v7, data=Muuthaku, family = binomial())
summary(malliglm2)
tulos <- c(0,1)
tulos
tulos <- [Muuthaku$v7_u - 1]
tulos <- Muuthaku$v7_u - 1
tulos
malliglm2 <- glm(tulos ~ bv9, data = Muuthaku, family = binomial())
plot(bv9, tulos)
plot(Muuthaku$bv9, tulos)
summary(malliglm2)
qplot(Muuthaku$bv9, tulos)
install.packages('pROC')
library(pROC)
qplot(Muuthaku$bv9, tulos, colour=color)
qplot(Muuthaku$bv9, tulos, colour=blue)
qplot(Muuthaku$bv9, tulos, color=blue)
qplot(Muuthaku$bv9, tulos, shape=cut)
qplot(Muuthaku$bv9, tulos, colour=color)
plot(malliglm2)
return
summary(malliglm2)
library(Data1)
file.choose()
file.choose()
data = file.choose()
file.choose()
Data1 = read("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\Ekonometria\\Data1", to.data.frame=T)
qplot(Muuthaku$bv9, tulos, col=bv9) #<- miten??
qplot(Muuthaku$bv9, tulos, col=Muuthaku$bv9) #<- miten??
ggplot(Muuthaku$bv9, tulos, col=Muuthaku$bv9) #<- miten??
qplot(Muuthaku$bv9, tulos, col=Muuthaku$bv9) #<- miten??
3.01e-16 < 0.001
Data1 = read.table("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\Ekonometria\\Data1", to.data.frame=T)
Data1 = read.table("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\Ekonometria\\Data1")
install.package(GGally)
library(foreign)
install.package(GGally)
library(GGally)
tulos <- Muuthaku$v7_u - 1
malliglm2 <- glm(tulos ~ v5, data = Muuthaku, family = binomial())
malliglm3 <- glm(tulos ~ v5, data = Muuthaku, family = binomial())
malliglm2 <- glm(tulos ~ bv9, data = Muuthaku, family = binomial())
summary(malliglm3)
ggplot(Muuthaku, aes(v5, tulos, col=v5))
ggplot(Muuthaku, aes(v5, tulos))
str(v5)
str(Muuthaku$v5)
summary(Muuthaku$v5)
qplot(v5, tulos)
qplot(Muuthaku$v5, tulos)
qplot(Muuthaku$v5, tulos)+theme_bw()
qplot(Muuthaku$v5, tulos)+theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=tulos)) + theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=tulos), geom="point") + theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=tulos), geom="point") + theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=v7), geom="point") + theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=tulos), geom="point") + theme_bw()+scale_fill_gradient(low="red", high="yellow")
ggplot(data=Muuthaku, aes(x=v5, y=tulos), geom="point") + theme_bw()+scale_fill_gradient(low="red", high="yellow")+geom_count()
ggplot(data=Muuthaku, aes(x=v5, y=tulos)) + theme_bw()+scale_fill_gradient(low="red", high="yellow")+geom_count()
ggplot(data=Muuthaku, aes(v5, tulos)) + theme_bw()+scale_fill_gradient(low="red", high="yellow")+geom_count()
ggplot(Muuthaku, aes(v5, tulos)) + theme_bw()+scale_fill_gradient(low="red", high="yellow")+geom_count()
ggplot(Muuthaku, aes(v5, tulos)) + theme_bw() + geom_count()
ggplot(Muuthaku, aes(v5, tulos)) + theme_classic() + geom_count()
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count()
testi1 <- ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count()
testi1 <- ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(col=blue)
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="blue")
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="red")
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="orange")
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="lightblue")
ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="blue")
t <- ggplot(Muuthaku, aes(v5, tulos)) + theme_minimal() + geom_count(colour="blue")
t + labs(x="Ratkaisun lopputulos", y="Muutoksenhaun kohde")
t + labs(x="Muutoksenhaun kohde", y="Ratkaisun lopputulos")
testi1 <- ggplot(Muuthaku, aes(v5, tulos)) + filter=mean(v5) + theme_minimal() + geom_count(colour="blue")
testi1 <- ggplot(Muuthaku, aes(v5, tulos)) + filter=mean(Muuthaku$v5) + theme_minimal() + geom_count(colour="blue")
p <- plot(x, keskarvo, type="o", col="blue", ann=F, axes=F)
keskarvo <- mean(Muuthaku$v5)
keskarvo <- mean(tulos)
str(keskarvo)
summary(keskarvo)
head(keskarvo)
tulos
attach(Muuthaku)
mytable <- table(v5, tulos)
mytable
prop.table(mytable, 1)
hyv <- c(0.10416667, 0.43678161, 0.82758621, 0.93333333)
hyv
names(hyv) <- c("Rang.määr.", "AO:n tuomio", "HO:n tuomio", "KKO:n tuomio")
hyv
testi1 <- ggplot(Muuthaku, aes(v5, hyv))
testi1 + geom_dotplot()
testi1 <- ggplot(Muuthaku, aes(v5, hyv))
testi1 + geom_dotplot()
testi1 <- ggplot(Muuthaku, aes(hyv, tulos))
testi1 + geom_dotplot()
testi1 <- ggplot(aes(hyv, tulos))
testi1 + geom_dotplot()
plot(hyv)
qplot(hyv)
plot(hyv)
ggplot(hyv, aes(hyv))
ggplot(hyv, aes(hyv)) + geom_dotplot()
ggplot(aes(hyv)) + geom_dotplot()
axis(2, at=0:1, c(0, 0.2, 0.4, 0.8, 1))
axis(2, las=1 at=0:1:c(0, 0.2, 0.4, 0.8, 1))
axis(2, at=0:1:c(0, 0.2, 0.4, 0.8, 1))
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ann=F, axes=F)
plot(hyv, col="blue", ann=T, axes=F)
plot(hyv, col="blue", ann=F, axes=F)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
title(xlab="Hakemuksen kohteena ollut ratkaisu", col.lab=rgb(0,0.5,0))
title(ylab="Hväksyttyjen hakemusten keskiarvo", col.lab=rgb(0,0.5,0))
axis(2, at=0:1)
box()
10/4
axis(2, at=0:1, lab=c(0, 0.3, 0.6, 1))
title(xlab="Hakemuksen kohteena ollut ratkaisu")
title(ylab="Hväksyttyjen hakemusten keskiarvo")
p <- function(hyv)
p
p
plot(p)
plot(hyv, col="blue)
plot(hyv, col="blue)
plot(hyv, col="blue")
plot(hyv, col="blue", ylim=c(0,1))
title(cex.lab=0.75)
title(xlab("Muutoksenhaun kohde"), ylab("Ratkaisun lopputulos") cex.lab=0.75)
title(xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos", cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos")
title(cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Ratkaisun lopputulos", cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen osuus",
cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen osuus",
cex.lab=0.75)
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio")))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75,
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio")) )
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75)
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75, xaxt="n")
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
plot(hyv, col="blue", ylim=c(0,1), xlab="Muutoksenhaun kohde", ylab="Hyväksyttyjen  hakemusten osuus",
cex.lab=0.75, type="o", xaxt="n")
axis(1, at=1:4, lab=c("Rangaistusmääräys","AO:n tuomio","HO:n tuomio","KKO:n tuomio"))
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
library(foreign)
Muuthaku = read.spss("C:\\Users\\Karin\\Documents\\opiskelulv16-17\\KANDI\\Asenteet.sav", to.data.frame=TRUE)
library(ggplot2)
install.packages("GGally")
library(GGally)
anova(malliglm2, test="Chisq")
tulos <- Muuthaku$v7_u - 1
tulos
malliglm2 <- glm(tulos ~ bv9, data = Muuthaku, family = binomial())
anova(malliglm2, test="Chisq")
library(pROC)
prf <- performance(malliglm2, measure = "tpr", x.measure = "fpr")
install.packages('ROCR')
library(ROCR)
prf <- performance(malliglm2, measure = "tpr", x.measure = "fpr")
alc <- read.table(file= "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", header=T, sep=",")
colnames(alc)
library(tidyr);library(dplyr);library(ggplot2)
str(alc_use)
str(alc$alc_use)
summary(alc$alc_use)
plot(Log)
Log <- glm(high_use ~ goout + famrel + studytime + sex, data = alc, family = "binomial")
summary(Log)
plot(Log)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)   }
loss_func(class = alc$high_use, prob = alc$probability)
probabilities <- predict(Log, type = "response")
alc <- mutate(alc, probability = probabilities)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
probabilities <- predict(Log, type = "response")
loss_func(class = alc$high_use, prob = alc$probabilities)
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probabilities > 0.5)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)   }
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
library(tidyr);library(dplyr);library(ggplot2)
Log <- glm(high_use ~ goout + famrel + studytime + sex, data = alc, family = "binomial")
summary(Log)
library(tidyr);library(dplyr);library(ggplot2)
OR <- coef(Log) %>% exp
CI <- confint(Log) %>% exp
OR <- coef(Log) %>% exp
CI <- confint(Log) %>% exp
cbind(OR, CI)
table(high_use = alc$high_use, prediction = alc$prediction) %>% prop.table %>% addmargins
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probabilities)
loss_func(class = alc$high_use, prob = alc$probability)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = T, sep=",")
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", header = T, sep=",")
teatime <- dplyr::select(tea, one_of(keep))
library(FactoMineR)
library(FactoMineR)
data("tea")
teatime <- dplyr::select(tea, one_of(keep))
keep <- c("breakfast", "Tea", "How", "age_Q", "frequency")
teatime <- dplyr::select(tea, one_of(keep))
mca <- MCA(X = teatime, graph=F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
plot.MCA(mca)
plot.MCA(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
str(tea)
library(FactoMineR)
data("tea")
str(tea)
citation()
library(FactoMineR)
data("tea")
str(tea)
choice <- glm(Tea ~ breakfast + How + age_Q)
choice <- glm(Tea ~ breakfast + How + age_Q, data=tea)
choice <- glm(Tea ~ breakfast + How + age_Q, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ breakfast + relaxing + age_Q, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ breakfast + relaxing + age, data=tea, family = "binomial")
summary(choice)
choice <- glm(breakfast ~ Tea + relaxing + age, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ breakfast + dinner + age, data=tea, family = "binomial")
summary(choice)
library(FactoMineR)
data("tea")
str(tea)
dim(tea)
choice <- glm(Tea ~ effect.on.health, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ relaxing, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ healthy, data=tea, family = "binomial")
summary(choice)
str(tea)
choice <- glm(Tea ~ frequency, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ how, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ where, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ price, data=tea, family = "binomial")
summary(choice)
summary(price)
summary(tea$price)
?Tea
??Tea
choice <- glm(Tea ~ SPC, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ escape.exoticism, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ sophisticated, data=tea, family = "binomial")
summary(choice)
choice <- glm(Tea ~ relaxing, data=tea, family = "binomial")
summary(choice)
keep <- c("age_Q", "SPC", "frequency", "how", "price", "Tea", "sex", "relaxing")
library(dplyr)
subset(tea) <- select(tea, one_of(keep))
tea_log <- select(tea, one_of(keep))
str(tea_log)
keep <- c("sex", "age_Q", "SPC", "frequency", "how", "price", "Tea", "relaxing")
tea_log <- select(tea, one_of(keep))
str(tea_log)
choice <- glm(Tea ~ age_Q + price, data=tea, family = "binomial")
summary(choice)
write.csv2(tea_log, file="tea")
setwd("~/opiskelulv16-17/IODS-k17/GitHub/IODS-final")
write.csv2(tea_log, file="tea")
tea_log <- open.table(tea, header=T, sep=",")
tea_log <- open.csv2(tea, header=T, sep=",")
tea_log <- open.srcfile(tea, header=T, sep=",")
read.csv2(tea)
read.csv2(file=tea)
read.csv2(file=tea, header = T, sep=",")
read.csv2(file=tea, header = T, sep=";")
tea_log <- open.srcfile(tea, header=T, sep=";")
tea_log <- read.csv2(file= "tea", header= T, sep=";")
library(ggplot2):library(GGally)
library(ggplot2)
ggpairs(tea_log)
tea_log <- read.table(file= "tea", header= T, sep=";")
View(tea_log)
mutate(.tea_log) <- tea_log - X
mutate(.tea_log) <- tea_log - tea_log$X
cor_matrix<-cor(tea_log) %>% round(digits=2)
cor(tea_log)
str(tea_log)
g1 <- ggplot(tea_log, aes(x = age_Q, fill=Tea)) + geom_bar() #+ xlab("Going out with friends")
g1
g1 <- ggplot(tea_log, aes(x = age_Q, fill=Tea)) + geom_bar() + xlab("Age groups")
g2 <- ggplot(tea_log), aes(x = frequency, fill=Tea)) + geom_bar() + xlab("Frequency of tea drinking")
g2 <- ggplot(tea_log, aes(x = frequency, fill=Tea)) + geom_bar() + xlab("Frequency of tea drinking")
g3 <- ggplot(tea_log, aes(x = price, fill=Tea)) + geom_bar() + xlab("Price of tea")
multiplot(g1, g2, g3, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(g1, g2, g3, cols=2)
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea")
multiplot(g1, g2, g3, g4, cols=2)
g1 <- ggplot(tea_log, aes(x = age_Q, fill=Tea)) + geom_bar() + xlab("Age groups") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g2 <- ggplot(tea_log, aes(x = frequency, fill=Tea)) + geom_bar() + xlab("Frequency of tea drinking") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g3 <- ggplot(tea_log, aes(x = price, fill= Tea)) + geom_bar() + xlab("Price of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, cols=2)
g4 <- ggplot(tea_log, aes(x = how, fill= Tea, col = c("grey40", "blue", "green"))) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4
g4 <- ggplot(tea_log, aes(x = how, fill= Tea, colour = c("grey40", "blue", "green"))) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4
g4 <- ggplot(tea_log, aes(x = how, fill= Tea, colour = "blue")) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
g4
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)
multiplot(g1, g2, g3, g4, cols=2)
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)
multiplot(g1, g2, g3, g4, cols=2)
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
multiplot(g1, g2, g3, g4, cols=2)
multiplot(g1, g2, g3, g4, cols=2, col(c("blue", "grey", "green")))
multiplot(g1, g2, g3, g4, cols=2, col=c("blue", "grey", "green"))
multiplot(g1, g2, g3, g4, cols=2)
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + scale_fill_brewer(
palette = "Blues")
g4
library(RColorBrewer)
display.brewer.all()
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + scale_fill_brewer(
palette = "Set1")
g4
display.brewer.all()
g1 <- ggplot(tea_log, aes(x = age_Q, fill=Tea)) + geom_bar() + xlab("Age groups") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))+ scale_fill_brewer(
palette = "Set1")
g2 <- ggplot(tea_log, aes(x = frequency, fill=Tea)) + geom_bar() + xlab("Frequency of tea drinking") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))+ scale_fill_brewer(
palette = "Set1")
g3 <- ggplot(tea_log, aes(x = price, fill= Tea)) + geom_bar() + xlab("Price of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))+ scale_fill_brewer(
palette = "Set1")
g4 <- ggplot(tea_log, aes(x = how, fill= Tea)) + geom_bar() + xlab("The form of tea") + theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + scale_fill_brewer(
palette = "Set1")
multiplot(g1, g2, g3, g4, cols=2)
p <- ggplot(data=tea, aes(x=age_Q))
p + geom_bar() + scale_fill(C("black", "blue", "red", "green"))
p + geom_bar() + scale_fill_brewer(c("black", "blue", "red", "green"))
library(ggplot2)
logmodel <- glm(Tea ~ age_Q + how + price + frequency, data=tea_log, family = "binomial")
summary(logmodel)
logmodel2 <- glm(Tea ~ age_Q, data=tea_log, family = "binomial")
OR <- coef(logmodel2) %>% exp
CI <- confint(logmodel2) %>% exp
cbind(OR, CI)
